[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = ["{{ cookiecutter.author_name }} <{{ cookiecutter.email }}>"]
license = "{{ cookiecutter.license }}"
readme = "README.md"
homepage = "{{ cookiecutter.domain_name }}"
documentation = ""
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_name|lower|replace(' ', '-')|replace('_', '-') }}/"
keywords = ["{{ cookiecutter.project_slug }}"]

[tool.poetry.dependencies]
python = "^3.7"
confusable_homoglyphs = "^3.2.0"
fastapi = {extras = ["all"], version = "^0.61.1"}
loguru = "^0.5"
importlib_metadata = {version = "^1.6.0", python = "<3.8"}
passlib = {extras = ["bcrypt"], version = "^1.7.2"}
pendulum = "^2.1.0"
python-dotenv = "^0.14.0"
tortoise-orm = {extras = ["accel"], version = "^0.16.13"}
typer = {extras = ["all"], version = "^0.3.2"}
python-jose = {extras = ["cryptography"], version = "^3.2.0"}

[tool.poetry.dev-dependencies]
black = "^20.8b1"
codecov = "^2.1"
coverage = {extras = ["toml"], version = "^5.1"}
darglint = "^1.4"
flake8 = "^3.8.2"
flake8-annotations = "^2.1.0"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.0"
flake8-bugbear = "^20.1.4"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
isort = {extras = ["pyproject"], version = "^5.4.2"}
mkdocs = "^1.1.2"
mkdocs-material = "^5.3"
mkdocstrings = "^0.13.0"
mkdocs-minify-plugin = "^0.3.0"
mkdocs-git-revision-date-localized-plugin = "^0.7"
mypy = "^0.782"
pytest = "^6.0.1"
pytest-cov = "^2.9.0"
pytype = {version = "^2020.5.13", python = "3.7"}
safety = "^1.9.0"
typeguard = "^2.9.1"
xdoctest = "^0.14.0"
asynctest = "^0.13.0"
pytest-dotenv = "^0.5"

[tool.poetry.scripts]
{{ cookiecutter.project_name|lower|replace(' ', '-')|replace('_', '-') }} = "{{ cookiecutter.project_slug }}.manage:app"

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["{{ cookiecutter.project_slug }}"]

[tool.coverage.report]
show_missing = true
fail_under = 84

[tool.isort]
profile="black"

[tool.pytest.ini_options]
minversion = "6.0"
env_files = ".test.env"
python_files = "tests.py test_*.py *_tests.py"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
